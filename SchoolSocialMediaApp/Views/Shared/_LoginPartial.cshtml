@using Microsoft.AspNetCore.Identity
@using SchoolSocialMediaApp.Infrastructure.Data.Models;
@using SchoolSocialMediaApp.Core.Contracts;
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject IRoleService RoleService

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        var user = await UserManager.GetUserAsync(User);
        if (user is null)
        {
            await SignInManager.SignOutAsync();
        }
        else
        {
            var userIsPrincipal = await UserManager.IsInRoleAsync(user, "Principal");
            var rolesThatCannotBePrincipal = new string[] { "Teacher", "Student", "Parent", "Principal", "Admin" };
            bool userCanBePrincipal = true;
            foreach (var role in rolesThatCannotBePrincipal)
            {
                if (await UserManager.IsInRoleAsync(user, role))
                    userCanBePrincipal = false;
            }
            var userIsPartOfSchool = RoleService.IsUserPartOfSchool(user);

            if (!userIsPartOfSchool)
            {
                <li class="nav-item">
                    <a class="nav-link text-dark" asp-controller="Invitation" asp-action="Index">Invitations</a>
                </li>
            }
            <li class="nav-item">
                <a class="nav-link text-dark" asp-controller="Account" asp-action="Manage" title="Manage">Hello @user.UserName</a>
            </li>
            if (userCanBePrincipal)
            {
                <li class="nav-item">
                    <a class="nav-link text-dark btn"  asp-controller="Account" asp-action="BecomePrincipal">Become a Principal</a>
                </li>
            }
            else if(!userIsPrincipal)
            {
                <li class="nav-item">
                    <a class="nav-link text-dark btn" asp-controller="Account" asp-action="QuitSchool">Quit School</a>
                </li>
            }
            if (userIsPrincipal)
            {
                <li class="nav-item">
                    <a class="nav-link text-dark btn" asp-controller="School" asp-action="Manage">Manage School</a>
                </li>
            }
            <li class="nav-item">
                <form class="form-inline" asp-controller="Account" asp-action="Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                    <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
                </form>
            </li>
        }
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-controller="Account" asp-action="Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-controller="Account" asp-action="Login">Login</a>
        </li>
    }
</ul>
